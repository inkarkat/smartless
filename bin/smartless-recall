#!/bin/bash
shopt -qs extglob

printUsage()
{
    cat <<HELPTEXT
Recall previous N'th smartless output, or the one where the capture file name is
NAME / contains *NAME-GLOB*, or the latest one where the captured contents match
(grep-style) PATTERN / GREP-ARGS.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" "[N|NAME|NAME-GLOB|PATTERN|GREP-ARGS ...] [-?|-h|--help]"
}

ensureCaptureDir()
{
    if [ ! "$SMARTLESS_CAPTURE_DIR" ]; then
	echo >&2 "ERROR: \$SMARTLESS_CAPTURE_DIR is not defined."
	return 2
    elif [ ! -d "$SMARTLESS_CAPTURE_DIR" ]; then
	echo >&2 "ERROR: The \$SMARTLESS_CAPTURE_DIR ($SMARTLESS_CAPTURE_DIR) does not exist."
	return 2
    fi
}

getCaptures()
{
    ensureCaptureDir || exit $?
    readarray -t captures < <(ls -d -t "$SMARTLESS_CAPTURE_DIR"/*)
    if [ ${#captures[@]} -eq 0 ]; then
	printf >&2 'ERROR: No captured outputs in %s\n' "$SMARTLESS_CAPTURE_DIR"
	exit 2
    fi
}

recallByNumber()
{
    getCaptures
    printf %s "${captures[${1:?} - 1]}"
}

recallGrep()
{
    getCaptures	# Note: Cannot simply use $SMARTLESS_CAPTURE_DIR/* glob here because we want to return a match in the newest capture.
    grep --no-messages --files-with-matches "$@" -- "${captures[@]}" | head -n 1
}

case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    '')			filespec="$(recallByNumber 1)";;
    +([0-9]))		filespec="$(recallByNumber "$1")";;
    *)			ensureCaptureDir || exit $?
			if [ $# -eq 1 ] && filespec="${SMARTLESS_CAPTURE_DIR}/$1" && [ -r "$filespec" ]; then
			    : # Directly take the NAME.
			elif [ $# -eq 1 ] && readarray -t filespecs < <(globmatch --files-matching "*${1}*" "$SMARTLESS_CAPTURE_DIR"/*) && [ ${#filespecs[@]} -eq 1 ]; then
			    filespec="${filespecs[0]}"
			else
			    filespec="$(recallGrep "$@")"
			fi
			;;
esac
if [ -z "$filespec" ]; then
    echo >&2 'ERROR: No such captured output.'
    exit 1
fi

# Do not use $PAGER (i.e. smartless) here; this would create another duplicate
# capture that messes up the N addressing (and is a bit wasteful). As only long
# output is captured, anyway, we can definitely use the real pager that
# smartless uses as well.
exec "${SMARTLESS_PAGER:-less}" ${SMARTLESS_PAGER_ARGUMENTS:-} "$filespec"
